# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI Databricks

on:
  workflow_call:
    inputs:
      image_tag:
        type: string
        default: latest

jobs:
  databricks_ci_build:
    uses: Energinet-DataHub/.github/.github/workflows/databricks-build-prerelease.yml@v14
    with:
      python_version: 3.11.7
      architecture: x64
      wheel_working_directory: ./source/settlement_report_python
      multiple_wheels: false
      should_include_assets: false

  settlement_report_unit_tests:
    strategy:
      fail-fast: false
      matrix:
        # IMPORTANT: When adding a new folder here it should also be added in the `unit_test_check` job!
        tests_filter_expression:
          - name: Settlement report unit testing
            paths: domain/ entry_points/ infrastructure/
    uses: Energinet-DataHub/.github/.github/workflows/python-ci.yml@v14
    with:
      job_name: ${{ matrix.tests_filter_expression.name }}
      operating_system: dh3-ubuntu-20.04-4core
      path_static_checks: ./source/settlement_report_python
      ignore_errors_and_warning_flake8: E501,F401,E402,E203,W503
      tests_folder_path: ./source/settlement_report_python/tests
      test_report_path: ./source/settlement_report_python/tests
      # See .docker/entrypoint.py on how to use the filter expression
      tests_filter_expression: ${{ matrix.tests_filter_expression.paths }}
      image_tag: ${{ inputs.image_tag }}

  # Tests that require the integration test environment
  settlement_report_integration_tests:
    uses: Energinet-DataHub/.github/.github/workflows/python-ci.yml@v14
    with:
      job_name: Settlement report integration testing
      operating_system: dh3-ubuntu-20.04-4core
      path_static_checks: ./source/settlement_report_python
      ignore_errors_and_warning_flake8: E501,F401,E402,E203,W503
      tests_folder_path: ./source/settlement_report_python/tests
      test_report_path: ./source/settlement_report_python/tests
      # See .docker/entrypoint.py on how to use the filter expression
      tests_filter_expression: integration_test/
      use_integrationtest_environment: true
      azure_integrationtest_tenant_id: ${{ vars.integration_test_azure_tenant_id }}
      azure_integrationtest_subscription_id: ${{ vars.integration_test_azure_subscription_id }}
      azure_integrationtest_spn_id: ${{ vars.integration_test_azure_spn_id_oidc }}
      azure_keyvault_url: ${{ vars.integration_test_azure_keyvault_url }}
      image_tag: ${{ inputs.image_tag }}

  settlement_report_mypy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Run pip intall and mypy check of files in package
        shell: bash
        run: |
          pip install --upgrade pip
          pip install mypy types-python-dateutil
          mypy ./source/settlement_report_python/settlement_report_job --disallow-untyped-defs --ignore-missing-imports

  settlement_report_black_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
        with:
          options: --check --diff
          src: ./source/settlement_report_python

  # Check executed unit tests
  settlement_report_unit_test_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Execute python tests
        shell: bash
        id: test_count
        run: |
          # IMPORTANT: When adding a new folder here, one must also add the folder
          # to one of the test jobs above! This is because this filter contains the sum of all folders
          # from test jobs.

          filter="domain/
          entry_points/
          infrastructure/"

          IMAGE_TAG=${{ inputs.image_tag }} docker compose -f .devcontainer/docker-compose.yml run --rm -u root python-unit-test ./.devcontainer/check_test_count.sh $filter
